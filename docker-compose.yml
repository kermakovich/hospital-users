version: '3'
services:
  elasticsearch:
    image: elasticsearch:8.5.3
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - hu
  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:8.5.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    networks:
      - hu
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.5.3
    volumes:
      - ./logs:/usr/share/logstash/logs
      - ./infra/logstash/pipeline/:/usr/share/logstash/pipeline/
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
    networks:
      - hu
    depends_on:
      - elasticsearch
  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "3000:3000"
    container_name: grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - hu
    depends_on:
      - elasticsearch
  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/tmp/prometheus/prometheus.yml
    command:
      - '--config.file=/tmp/prometheus/prometheus.yml'
    networks:
      - hu
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - hu
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
      - "7071:7071"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_LOGGERS: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -javaagent:/opt/kafka/libs/jmx_prometheus_javaagent.jar=7071:/opt/kafka/config/jmx_exporter_config.yml
    networks:
      - hu
    volumes:
      - /usr/lib/jmx_prometheus_javaagent-0.3.0.jar:/opt/kafka/libs/jmx_prometheus_javaagent.jar
      - ./prometheus/kafka/jmx-config.yml:/opt/kafka/config/jmx_exporter_config.yml
networks:
  hu:
    driver: bridge